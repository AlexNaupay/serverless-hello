service: serverless-started-service
frameworkVersion: '3'

package:
  individually: true
  patterns:
    - "!.dynamodb"
    - "!node_modules"
    - "!.venv"
    - "!.github"

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action: "dynamodb:*"
          Resource: { "Fn::GetAtt": [ "usersTable", "Arn" ] }  # Better
          #Resource: arn:aws:dynamodb:us-east-1:471893938953:table/usersTable

functions:
  hello:
    handler: users-get/handler.index  # file.function
    events:
      - http:
          path: /hello
          method: GET
  get-user:
    handler: users-get/handler.getUser  # file.function
    events:
      - http:
          path: /users/{id}
          method: GET
  get-users:
    handler: users-get/handler.getUsers  # file.function
    events:
      - http:
          path: /users
          method: GET
  store-user:
    handler: users-create/handler.store  # file.function
    events:
      - http:
          path: /users
          method: POST
  update-user:
    handler: users-update/handler.update  # file.function
    events:
      - http:
          path: /users/{id}
          method: PUT
  delete-user:
    handler: users-delete/handler.delete  # file.function
    runtime: python3.10
    #environment:
    #    VIRTUAL_ENV_PATH: .venv
    events:
      - http:
          path: /users/{id}
          method: DELETE

plugins:
  - serverless-dynamodb
  - serverless-offline

custom:
  serverless-dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      docker: false
      migrate: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
